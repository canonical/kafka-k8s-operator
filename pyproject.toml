# Copyright 2022 Canonical Ltd.
# See LICENSE file for licensing details.

# Testing tools configuration
[tool.coverage.run]
branch = true

[tool.coverage.report]
show_missing = true

[tool.pytest.ini_options]
minversion = "6.0"
log_cli_level = "INFO"
asyncio_mode = "auto"
markers = ["unstable", "broker", "balancer"]

# Formatting tools configuration
[tool.black]
line-length = 99
target-version = ["py310"]

[tool.isort]
profile = "black"

[tool.codespell]
ignore-words-list = "AKS,aks"

[tool.poetry]
name = "kafka-k8s-operator"
version = "1.0"
description = "kafka-k8s-operator"
authors = []

[tool.poetry.dependencies]
python = "^3.10"
ops = ">=2.4.1"
kazoo = ">=2.8.0"
tenacity = ">=8.0.1"
pure-sasl = ">=0.6.2"
jsonschema = ">=4.10"
cryptography = ">42.0.0"
pydantic = "^1.10.7"
pyyaml = "^6.0.1"
requests = ">2.25"
lightkube = "0.15.0"
# FIXME: Unpin once rustc 1.76 is available at build time
rpds-py = "<0.19"

[tool.poetry.group.fmt]
optional = true

[tool.poetry.group.fmt.dependencies]
black = "^22.3.0"
ruff = ">=0.1.0"

[tool.poetry.group.lint]
optional = true

[tool.poetry.group.lint.dependencies]
black = "^22.3.0"
ruff = ">=0.1.0"
codespell = ">=2.2.2"
pyright = "^1.1.301"
lightkube = "0.15.0"
# FIXME: Unpin once rustc 1.76 is available at build time
rpds-py = "<0.19"

[tool.poetry.group.unit]
optional = true

[tool.poetry.group.unit.dependencies]
pytest = ">=7.2"
coverage = { extras = ["toml"], version = ">7.0" }
pytest-mock = "^3.11.1"
packaging = "^23.1"
ops-scenario = "^6.0.0"

[tool.poetry.group.security]
optional = true

[tool.poetry.group.security.dependencies]
bandit = "^1.7.4"
safety = "^3.0.0"

[tool.poetry.group.integration]
optional = true

[tool.poetry.group.integration.dependencies]
pytest = ">=7.2"
juju = "^3.2.0"
coverage = { extras = ["toml"], version = ">7.0" }
pytest-operator = ">0.20"
kazoo = ">=2.8"
tenacity = ">=7.0"
pure-sasl = ">=0.5"
kafka-python = ">=2.0"
requests = ">2.25"
pytest-operator-cache = { git = "https://github.com/canonical/data-platform-workflows", tag = "v6.1.1", subdirectory = "python/pytest_plugins/pytest_operator_cache" }

[tool.ruff]
line-length = 99
lint.select = ["E", "W", "F", "C", "N", "D", "I001"]
lint.extend-ignore = [
  "D203",
  "D204",
  "D213",
  "D215",
  "D400",
  "D401",
  "D404",
  "D406",
  "D407",
  "D408",
  "D409",
  "D413",
]
lint.ignore = ["E501", "D107"]
extend-exclude = ["__pycache__", "*.egg_info"]
lint.per-file-ignores = { "tests/*" = ["D100", "D101", "D102", "D103", "D104", "E999"], "src/literals.py" = ["D101"] }
target-version = "py310"
src = ["src", "tests"]

[tool.ruff.lint.mccabe]
max-complexity = 10

[tool.pyright]
include = ["src"]
extraPaths = ["./lib"]
pythonVersion = "3.10"
pythonPlatform = "All"
typeCheckingMode = "basic"
reportIncompatibleMethodOverride = false
reportImportCycles = false
reportMissingModuleSource = true
stubPath = ""
